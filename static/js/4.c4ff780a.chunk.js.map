{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","img","src","alt","message","likesCount","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostBody","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","ProfileInfo","profile","description","class","userPhoto","photos","large","fullName","contacts","facebook","vk","twitter","Preloader","isFetching","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.c4ff780a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__wsht1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3_40O\",\"posts\":\"MyPosts_posts__1F3Uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2hoLj\",\"img\":\"ProfileInfo_img__2KvsJ\",\"description\":\"ProfileInfo_description__Vh187\",\"userPhoto\":\"ProfileInfo_userPhoto__1gHHy\"};","import s from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      <div>\r\n        <img\r\n          className={s.img}\r\n          src=\"https://yt3.ggpht.com/ytc/AAUvwnhlHV0dtJCabiw8H9rkr36K7TLPkBRIgXpD4try5g=s900-c-k-c0x00ffffff-no-rj\"\r\n          alt=\"ava\"\r\n        ></img>\r\n        {props.message}\r\n        <div>\r\n          <span>{props.likesCount}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newPostBody\"\r\n        validate={[required, maxLength10]}\r\n        placeholder={\"type, bitch\"}\r\n      />\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"ProfileAddPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPost(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  },[props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"---------  \"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"./../../../assets/images/photo.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader isFetching={props.isFetching}/>;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.description}>\r\n        <img\r\n          class={s.userPhoto}\r\n          src={\r\n            props.profile.photos.large != null\r\n              ? props.profile.photos.large\r\n              : userPhoto\r\n          }\r\n          alt=\"ava\"\r\n        ></img>\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n        <div>\r\n          <b>{props.profile.fullName}</b>\r\n        </div>\r\n        <ul>\r\n          <li>Facebook: {props.profile.contacts.facebook}</li>\r\n          <li>Vk: {props.profile.contacts.vk}</li>\r\n          <li>Twitter: {props.profile.contacts.twitter}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} isFetching={props.isFetching}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return <Profile {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n  isFetching: state.profilePage.isFetching,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}