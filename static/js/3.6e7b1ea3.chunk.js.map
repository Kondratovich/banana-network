{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","newMessageText","isAuth","dialogsItems","values","sendMessage","newMessageBody","compose","connect","state","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,aAAe,iCAAiC,OAAS,2BAA2B,SAAW,+B,oBCAvJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,oBCA9ID,EAAOC,QAAU,CAAC,SAAW,4B,+GCUdC,EARI,SAACC,GAClB,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,SAAsCN,EAAMO,U,oCCInCC,EARC,SAACR,GACf,OACE,8BACE,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,a,gDCmClCC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAhBL,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,cACZC,SAAU,CAACC,IAAUZ,KAEvB,8BACE,kDAUOa,EAtDC,SAACvB,GACf,IAAIwB,EAAkBxB,EAAMyB,YAAYC,QAAQC,KAAI,SAACC,GAAD,OAClD,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,QAG9BuB,EAAmB7B,EAAMyB,YAAYK,SAASH,KAAI,SAACI,GAAD,OACpD,cAAC,EAAD,CACEtB,QAASsB,EAAEtB,QACXuB,eAAgBhC,EAAMyB,YAAYO,oBAQtC,OAAqB,IAAjBhC,EAAMiC,OACD,cAAC,IAAD,CAAU5B,GAAI,WAIrB,sBAAKJ,UAAWC,IAAEwB,QAAlB,UACE,qBAAKzB,UAAWC,IAAEgC,aAAlB,SAAiCV,IACjC,sBAAKvB,UAAWC,IAAE4B,SAAlB,UACE,8BAAMD,IACN,cAACjB,EAAD,CAAqBG,SAbP,SAACoB,GACnBnC,EAAMoC,YAAYD,EAAOE,0BCVdC,sBACbC,aAPoB,SAACC,GACrB,MAAO,CACLf,YAAae,EAAMf,eAKI,CACvBW,kBAEFK,IAJaH,CAKbf","file":"static/js/3.6e7b1ea3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__1v1tP\",\"dialogsItems\":\"DialogItem_dialogsItems__tHZIa\",\"active\":\"DialogItem_active__fmYjh\",\"messages\":\"DialogItem_messages__2xhuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1xk-N\",\"dialogsItems\":\"Dialogs_dialogsItems__2UHlF\",\"active\":\"Dialogs_active__3sTKR\",\"messages\":\"Dialogs_messages__2AhWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__18XD2\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\"\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.message}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = props.dialogsPage.messages.map((m) => (\r\n    <Message\r\n      message={m.message}\r\n      newMessageText={props.dialogsPage.newMessageText}\r\n    />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (props.isAuth === false) {\r\n    return <Redirect to={\"/login\"} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newMessageBody\"\r\n        placeholder=\"type, bitch\"\r\n        validate={[required, maxLength50]}\r\n      />\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessage } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}